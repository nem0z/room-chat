syntax = "proto3";

package chat;

option go_package = ".server";

// Format of message used on the server side
message Message {
  bytes pub_key = 1;
  bytes witness = 2;
  string tag = 3;
  string data = 4;
}

// Requests formats
message GetMessagesReq {
  string tag = 1;
}

// Reponses formats
enum ErrorCode {
  UNKNOWN = 0;
  INVALID_WITNESS = 1;
  INVALID_PUBKEY = 2;
  INTERNAL_ERROR = 3;
}

message PostMessageResp {
  bool success = 1;
  ErrorCode err_code = 2;
  string err_message = 3;
}

message GetMessagesResp {
  repeated Message messages = 1;
  ErrorCode err_code = 2;
  string err_message = 3;
}

// Chat service definition
service ChatService {
  // Post a message
  rpc PostMessage(Message) returns (PostMessageResp);

  // Get the last messages for a specific tag
  rpc GetMessagesByTag(GetMessagesReq) returns (GetMessagesResp);
}